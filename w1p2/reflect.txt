Name ---- Kristjan Punno
Email --- kpunno@myseneca.ca
ID ------ 150695211
Section - NCC
Date ---- 2022-09-18



1) effect of constexpr;

constexpr signifies that an expression can be evaluated at compile time. If the associated expression is not able to be evaluated on compilation, the compiler will throw an error. The const qualifier indicates that an expression, if not able to be evaluated at compile time, is able to be evaluated at run-time.



2) importance of the rule of three;

In any class requires a user-defined destructor, copy constructor, or copy assignment operator, it should possess a user-defined variant of each of the three. The primary importance of implementing this rule is to ensure that dynamically allocated memory is seamlessly and respectively allocated between objects.

In the case of the Cars class, once upgraded to dynamically store the brand in a character array of varying size, it is imperative that the class has a user-defined 
1: destructor to delete the dynamic memory stored in brand 
2: a copy assignment operator in the event that a Cars object's brand may be copied to another Cars object
3: a copy constructor in the event that a Cars object is replicated, and the replicant will need a separate allocation for its own brand



3) topics learned in this workshop;

- Command line arguments

Prior to this workshop, I had very little knowledge about command line arguments and that the main function could accept them. This functionality is useful for targeting files to be read by the program without requiring user input to specify which what to read during the lifetime of the program.

The listArgs function uses the main function's arguments directly, to output which arguments have been applied at the command line. argc is an integer representing the number of applied arguments, such that a loop can access each string that has been supplied the argv array, and display each argument individually.


- Static and external linkage

An external variable is able to be accessed globally, and is available across translation units. A static variable is known only within its translation unit.

The Cars class' display function contains a static variable named "counter". Using a static variable in this case allows for the function to increment the variable each time the function is called, without having it be reset or reinitialized on each call of the function. The counter is able to be reset when a new list is printed: The program first displays all cars, and then resets the counter to print the new list containing new cars.


- Upgrading the Cars class

The car brand was upgraded to store memory dynamically offering an optimization to the class in the form of not wasting memory unnecessarily. Using a static array for the storage of strings that vary in length will likely result in wasted memory that won't be used by shorter incoming strings. Using memory that adheres to the length of the incoming string allows the program to allocate memory efficiently.
